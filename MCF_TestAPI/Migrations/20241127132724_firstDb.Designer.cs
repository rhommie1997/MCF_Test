// <auto-generated />
using System;
using MCF_TestAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MCF_TestAPI.Migrations
{
    [DbContext(typeof(MCF_TestAPI_DbContext))]
    [Migration("20241127132724_firstDb")]
    partial class firstDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MCF_TestAPI.Models.ms_storage_location", b =>
                {
                    b.Property<string>("location_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("location_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("location_id");

                    b.ToTable("ms_storage_locations");

                    b.HasData(
                        new
                        {
                            location_id = "TEST1",
                            location_name = "TEST 1"
                        },
                        new
                        {
                            location_id = "TEST2",
                            location_name = "TEST 2"
                        });
                });

            modelBuilder.Entity("MCF_TestAPI.Models.ms_user", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"), 1L, 1);

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("ms_users");

                    b.HasData(
                        new
                        {
                            user_id = 1,
                            isActive = true,
                            password = "123",
                            user_name = "rhommie"
                        });
                });

            modelBuilder.Entity("MCF_TestAPI.Models.tr_bpkb", b =>
                {
                    b.Property<string>("agreement_number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("bpkb_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("bpkb_date_in")
                        .HasColumnType("datetime2");

                    b.Property<string>("bpkb_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branch_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_on")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("faktur_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("faktur_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_updated_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("last_updated_on")
                        .HasColumnType("datetime2");

                    b.Property<string>("location_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("police_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("agreement_number");

                    b.HasIndex("location_id");

                    b.ToTable("tr_bpkbs");
                });

            modelBuilder.Entity("MCF_TestAPI.Models.tr_bpkb", b =>
                {
                    b.HasOne("MCF_TestAPI.Models.ms_storage_location", "Location")
                        .WithMany("tr_bpkbs")
                        .HasForeignKey("location_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("MCF_TestAPI.Models.ms_storage_location", b =>
                {
                    b.Navigation("tr_bpkbs");
                });
#pragma warning restore 612, 618
        }
    }
}
